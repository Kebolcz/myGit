//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.18444 版自动生成。
// 
#pragma warning disable 1591

namespace WechatApp.MWFWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileWFWebServiceSoap", Namespace="http://www.dahanis.com/")]
    public partial class MobileWFWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback LoginPlatformOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserADInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMobileWorklistCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserDevicetokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAndroidClientVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWorkListCountV2OperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveUserDevicetokenV2OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileWFWebService() {
            this.Url = global::WechatApp.Properties.Settings.Default.WechatApp_MWFWebService_MobileWFWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event LoginPlatformCompletedEventHandler LoginPlatformCompleted;
        
        /// <remarks/>
        public event GetUserADInfoCompletedEventHandler GetUserADInfoCompleted;
        
        /// <remarks/>
        public event GetMobileWorklistCountCompletedEventHandler GetMobileWorklistCountCompleted;
        
        /// <remarks/>
        public event SaveUserDevicetokenCompletedEventHandler SaveUserDevicetokenCompleted;
        
        /// <remarks/>
        public event GetAndroidClientVersionCompletedEventHandler GetAndroidClientVersionCompleted;
        
        /// <remarks/>
        public event GetWorkListCountV2CompletedEventHandler GetWorkListCountV2Completed;
        
        /// <remarks/>
        public event SaveUserDevicetokenV2CompletedEventHandler SaveUserDevicetokenV2Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/LoginPlatform", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string LoginPlatform(string argUser, string argPassword, string argServiceId, string argSign, bool argAPKLogin) {
            object[] results = this.Invoke("LoginPlatform", new object[] {
                        argUser,
                        argPassword,
                        argServiceId,
                        argSign,
                        argAPKLogin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginPlatformAsync(string argUser, string argPassword, string argServiceId, string argSign, bool argAPKLogin) {
            this.LoginPlatformAsync(argUser, argPassword, argServiceId, argSign, argAPKLogin, null);
        }
        
        /// <remarks/>
        public void LoginPlatformAsync(string argUser, string argPassword, string argServiceId, string argSign, bool argAPKLogin, object userState) {
            if ((this.LoginPlatformOperationCompleted == null)) {
                this.LoginPlatformOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginPlatformOperationCompleted);
            }
            this.InvokeAsync("LoginPlatform", new object[] {
                        argUser,
                        argPassword,
                        argServiceId,
                        argSign,
                        argAPKLogin}, this.LoginPlatformOperationCompleted, userState);
        }
        
        private void OnLoginPlatformOperationCompleted(object arg) {
            if ((this.LoginPlatformCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginPlatformCompleted(this, new LoginPlatformCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/GetUserADInfo", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserADInfo(string user) {
            object[] results = this.Invoke("GetUserADInfo", new object[] {
                        user});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserADInfoAsync(string user) {
            this.GetUserADInfoAsync(user, null);
        }
        
        /// <remarks/>
        public void GetUserADInfoAsync(string user, object userState) {
            if ((this.GetUserADInfoOperationCompleted == null)) {
                this.GetUserADInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserADInfoOperationCompleted);
            }
            this.InvokeAsync("GetUserADInfo", new object[] {
                        user}, this.GetUserADInfoOperationCompleted, userState);
        }
        
        private void OnGetUserADInfoOperationCompleted(object arg) {
            if ((this.GetUserADInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserADInfoCompleted(this, new GetUserADInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/GetMobileWorklistCount", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMobileWorklistCount(string argUser, string argServiceId, string argSign, bool argUseAPK) {
            object[] results = this.Invoke("GetMobileWorklistCount", new object[] {
                        argUser,
                        argServiceId,
                        argSign,
                        argUseAPK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMobileWorklistCountAsync(string argUser, string argServiceId, string argSign, bool argUseAPK) {
            this.GetMobileWorklistCountAsync(argUser, argServiceId, argSign, argUseAPK, null);
        }
        
        /// <remarks/>
        public void GetMobileWorklistCountAsync(string argUser, string argServiceId, string argSign, bool argUseAPK, object userState) {
            if ((this.GetMobileWorklistCountOperationCompleted == null)) {
                this.GetMobileWorklistCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMobileWorklistCountOperationCompleted);
            }
            this.InvokeAsync("GetMobileWorklistCount", new object[] {
                        argUser,
                        argServiceId,
                        argSign,
                        argUseAPK}, this.GetMobileWorklistCountOperationCompleted, userState);
        }
        
        private void OnGetMobileWorklistCountOperationCompleted(object arg) {
            if ((this.GetMobileWorklistCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMobileWorklistCountCompleted(this, new GetMobileWorklistCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/SaveUserDevicetoken", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveUserDevicetoken(string argLoginUser, string argDevicetoken, string argRemarks, bool argIsDelete) {
            object[] results = this.Invoke("SaveUserDevicetoken", new object[] {
                        argLoginUser,
                        argDevicetoken,
                        argRemarks,
                        argIsDelete});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserDevicetokenAsync(string argLoginUser, string argDevicetoken, string argRemarks, bool argIsDelete) {
            this.SaveUserDevicetokenAsync(argLoginUser, argDevicetoken, argRemarks, argIsDelete, null);
        }
        
        /// <remarks/>
        public void SaveUserDevicetokenAsync(string argLoginUser, string argDevicetoken, string argRemarks, bool argIsDelete, object userState) {
            if ((this.SaveUserDevicetokenOperationCompleted == null)) {
                this.SaveUserDevicetokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserDevicetokenOperationCompleted);
            }
            this.InvokeAsync("SaveUserDevicetoken", new object[] {
                        argLoginUser,
                        argDevicetoken,
                        argRemarks,
                        argIsDelete}, this.SaveUserDevicetokenOperationCompleted, userState);
        }
        
        private void OnSaveUserDevicetokenOperationCompleted(object arg) {
            if ((this.SaveUserDevicetokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserDevicetokenCompleted(this, new SaveUserDevicetokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/GetAndroidClientVersion", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAndroidClientVersion() {
            object[] results = this.Invoke("GetAndroidClientVersion", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAndroidClientVersionAsync() {
            this.GetAndroidClientVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetAndroidClientVersionAsync(object userState) {
            if ((this.GetAndroidClientVersionOperationCompleted == null)) {
                this.GetAndroidClientVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAndroidClientVersionOperationCompleted);
            }
            this.InvokeAsync("GetAndroidClientVersion", new object[0], this.GetAndroidClientVersionOperationCompleted, userState);
        }
        
        private void OnGetAndroidClientVersionOperationCompleted(object arg) {
            if ((this.GetAndroidClientVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAndroidClientVersionCompleted(this, new GetAndroidClientVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/GetWorkListCountV2", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWorkListCountV2(string argUser, string pwd, string argServiceId, string argSign, bool argUseAPK) {
            object[] results = this.Invoke("GetWorkListCountV2", new object[] {
                        argUser,
                        pwd,
                        argServiceId,
                        argSign,
                        argUseAPK});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWorkListCountV2Async(string argUser, string pwd, string argServiceId, string argSign, bool argUseAPK) {
            this.GetWorkListCountV2Async(argUser, pwd, argServiceId, argSign, argUseAPK, null);
        }
        
        /// <remarks/>
        public void GetWorkListCountV2Async(string argUser, string pwd, string argServiceId, string argSign, bool argUseAPK, object userState) {
            if ((this.GetWorkListCountV2OperationCompleted == null)) {
                this.GetWorkListCountV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWorkListCountV2OperationCompleted);
            }
            this.InvokeAsync("GetWorkListCountV2", new object[] {
                        argUser,
                        pwd,
                        argServiceId,
                        argSign,
                        argUseAPK}, this.GetWorkListCountV2OperationCompleted, userState);
        }
        
        private void OnGetWorkListCountV2OperationCompleted(object arg) {
            if ((this.GetWorkListCountV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWorkListCountV2Completed(this, new GetWorkListCountV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.dahanis.com/SaveUserDevicetokenV2", RequestNamespace="http://www.dahanis.com/", ResponseNamespace="http://www.dahanis.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SaveUserDevicetokenV2(string argLoginUser, string argPwd, string argDevicetoken, string argRemarks, bool argIsDelete) {
            object[] results = this.Invoke("SaveUserDevicetokenV2", new object[] {
                        argLoginUser,
                        argPwd,
                        argDevicetoken,
                        argRemarks,
                        argIsDelete});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SaveUserDevicetokenV2Async(string argLoginUser, string argPwd, string argDevicetoken, string argRemarks, bool argIsDelete) {
            this.SaveUserDevicetokenV2Async(argLoginUser, argPwd, argDevicetoken, argRemarks, argIsDelete, null);
        }
        
        /// <remarks/>
        public void SaveUserDevicetokenV2Async(string argLoginUser, string argPwd, string argDevicetoken, string argRemarks, bool argIsDelete, object userState) {
            if ((this.SaveUserDevicetokenV2OperationCompleted == null)) {
                this.SaveUserDevicetokenV2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveUserDevicetokenV2OperationCompleted);
            }
            this.InvokeAsync("SaveUserDevicetokenV2", new object[] {
                        argLoginUser,
                        argPwd,
                        argDevicetoken,
                        argRemarks,
                        argIsDelete}, this.SaveUserDevicetokenV2OperationCompleted, userState);
        }
        
        private void OnSaveUserDevicetokenV2OperationCompleted(object arg) {
            if ((this.SaveUserDevicetokenV2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveUserDevicetokenV2Completed(this, new SaveUserDevicetokenV2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void LoginPlatformCompletedEventHandler(object sender, LoginPlatformCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginPlatformCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginPlatformCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetUserADInfoCompletedEventHandler(object sender, GetUserADInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserADInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserADInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetMobileWorklistCountCompletedEventHandler(object sender, GetMobileWorklistCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMobileWorklistCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMobileWorklistCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveUserDevicetokenCompletedEventHandler(object sender, SaveUserDevicetokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserDevicetokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserDevicetokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetAndroidClientVersionCompletedEventHandler(object sender, GetAndroidClientVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAndroidClientVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAndroidClientVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void GetWorkListCountV2CompletedEventHandler(object sender, GetWorkListCountV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWorkListCountV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWorkListCountV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    public delegate void SaveUserDevicetokenV2CompletedEventHandler(object sender, SaveUserDevicetokenV2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveUserDevicetokenV2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveUserDevicetokenV2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591